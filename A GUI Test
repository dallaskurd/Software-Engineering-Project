import javax.swing.*;
//import java.awt.event.*;
import java.awt.*;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
class EmptyFrame extends JFrame implements ItemListener, ActionListener
{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String sundayEvents="";
	private String mondayEvents="";
	private String tuesdayEvents="";
	private String wednesdayEvents="";
	private String thursdayEvents="";
	private String fridayEvents="";
	private String saturdayEvents="";
	private String todayevents="";
	JPanel cards;
	//Need Holiday Consents
	private String[] monthevents= new String[50];
	Calendar cale = new GregorianCalendar();
	static JFrame frame = new JFrame("GuiTest");
	public void addCompToFrame(Container pane) 
 {
		
		JPanel comboBoxPane =new JPanel();
		setTitle("EmptyFrame");
		setSize(2000,500); // default size is 0,0
		setLocation(0,30); // default is 0,0 (top left corner)
		String comboBoxItems[] = { "Week View", "Month View", "Day View" };
		JComboBox cb = new JComboBox(comboBoxItems);
		cb.setEditable(false);
        cb.addItemListener((ItemListener) this);
        comboBoxPane.add(cb);
        JButton add=new JButton("Add Event");
        JButton delete=new JButton("Delete Event");
        JButton edit=new JButton("Edit Event");
        add.addActionListener((ActionListener)this);
        delete.addActionListener((ActionListener)this);
        edit.addActionListener((ActionListener)this);
        add.setActionCommand("add");
        delete.setActionCommand("delete");
        edit.setActionCommand("edit");
        comboBoxPane.add(add);
        comboBoxPane.add(delete);
        comboBoxPane.add(edit);
        JPanel card1=new JPanel(new GridLayout(1,7,15,15));
        JPanel card2=new JPanel();
        JPanel card3=new JPanel();
		  JPanel sunday = new JPanel(new BorderLayout()); 
	    	add(sunday);
	    JLabel sundaylab = new JLabel("Sunday");
	    sunday.add(sundaylab,BorderLayout.NORTH);
	  	  TextArea sunEvents = new TextArea(sundayEvents,10,10);
	             sunEvents.setEditable(false) ;
		sunday.add(sunEvents,BorderLayout.CENTER);
		card1.add(sunday);
		
	    JPanel monday = new JPanel(new BorderLayout()); 
	    	add(monday);
	    JLabel mondaylab = new JLabel("Monday");
	    monday.add(mondaylab,BorderLayout.NORTH);
		TextArea monEvents = new TextArea(mondayEvents);
	    monEvents.setEditable(false) ;
	    monday.add(monEvents,BorderLayout.CENTER);  
	    card1.add(monday);
	    JPanel tuesday = new JPanel(new BorderLayout()); 
	    	add(tuesday);
	    JLabel tuesdaylab = new JLabel("Tuesday");
	    tuesday.add(tuesdaylab,BorderLayout.NORTH);
		TextArea tuesEvents = new TextArea(tuesdayEvents);
	    tuesEvents.setEditable(false) ;         
		tuesday.add(tuesEvents,BorderLayout.CENTER);  
		card1.add(tuesday);
	    JPanel wednesday = new JPanel(new BorderLayout()); 
	    	add(wednesday);
	    JLabel wednesdaylab = new JLabel("Wednesday");
	    wednesday.add(wednesdaylab,BorderLayout.NORTH);
	    card1.add(wednesday);
		
	    JPanel thursday = new JPanel(new BorderLayout()); 
	    	add(thursday);
	    JLabel thursdaylab = new JLabel("Thursday");
	    thursday.add(thursdaylab,BorderLayout.NORTH);
	    card1.add(thursday);
		
	    JPanel friday = new JPanel(new BorderLayout()); 
	    	add(friday);
	    JLabel fridaylab = new JLabel("Friday");
	    friday.add(fridaylab,BorderLayout.NORTH);
	    card1.add(friday);
		
	    JPanel saturday = new JPanel(new BorderLayout()); 
	    	add(saturday);
	    JLabel saturdaylab = new JLabel("Saturday");
	    saturday.add(saturdaylab,BorderLayout.NORTH);
	    card1.add(saturday);
		  
		  TextArea wednesEvents = new TextArea(wednesdayEvents);
	     wednesEvents.setEditable(false) ;         
		wednesday.add(wednesEvents,BorderLayout.CENTER);
		TextArea thursEvents = new TextArea(thursdayEvents);
	    thursEvents.setEditable(false) ;         
		thursday.add(thursEvents,BorderLayout.CENTER);
		 TextArea friEvents = new TextArea(fridayEvents);
	     friEvents.setEditable(false) ;         
		friday.add(friEvents,BorderLayout.CENTER);
		  TextArea satEvents = new TextArea(saturdayEvents);
	     satEvents.setEditable(false) ;         
		saturday.add(satEvents,BorderLayout.CENTER);
		
		/* MONTH VIEW */
		int todaydate = cale.get(Calendar.DAY_OF_MONTH);
		int thismonth = cale.get(Calendar.MONTH);
		int daysleft=0;
		cale.add(Calendar.DAY_OF_MONTH, 1); //sees if its the last day
		while(cale.get(Calendar.MONTH)==thismonth)
		{
			daysleft++;
			cale.add(Calendar.DAY_OF_MONTH, 1);
		}
		int lastday= todaydate+daysleft;
		cale.add(Calendar.DAY_OF_MONTH, -1);
		int lastdayofweek=cale.get(Calendar.DAY_OF_WEEK);
		cale.add(Calendar.DAY_OF_MONTH, -(lastday-1));
		int daystart = cale.get(Calendar.DAY_OF_WEEK);
		cale.add(Calendar.DAY_OF_MONTH, todaydate);
		JPanel month = new JPanel(new GridLayout(6,1,1,1));
		JPanel labels = new JPanel(new GridLayout(1,7,14,1));
		JPanel first = new JPanel(new BorderLayout());
		first.add(new JLabel("Sunday"),BorderLayout.CENTER);
		labels.add(first);
		JPanel second = new JPanel(new BorderLayout());
		second.add(new JLabel("Monday"),BorderLayout.CENTER);
		labels.add(second);
		JPanel third = new JPanel(new BorderLayout());
		third.add(new JLabel("Tuesday"),BorderLayout.CENTER);
		labels.add(third);
		JPanel fourth = new JPanel(new BorderLayout());
		fourth.add(new JLabel("Wednesday"),BorderLayout.CENTER);
		labels.add(fourth);
		JPanel fifth = new JPanel(new BorderLayout());
		fifth.add(new JLabel("Thursday"),BorderLayout.CENTER);
		labels.add(fifth);
		JPanel sixth = new JPanel(new BorderLayout());
		sixth.add(new JLabel("Friday"),BorderLayout.CENTER);
		labels.add(sixth);
		JPanel seventh = new JPanel(new BorderLayout());
		seventh.add(new JLabel("Saturday"),BorderLayout.WEST);
		labels.add(seventh);
		month.add(labels);
		JPanel firstweek =new JPanel(new GridLayout(1,7,5,20));
		JPanel[] buffer=new JPanel[8];
		for(int i=1; i<daystart; i++)
		{
			buffer[i]=new JPanel(new BorderLayout());
			firstweek.add(buffer[i]);
		}
		JPanel[] days=new JPanel[lastday+daystart];
		TextArea[] daysevents=new TextArea[lastday+daystart];
		for(int i=daystart;i<8;i++)
		{
			days[i]=new JPanel(new BorderLayout());		
			daysevents[i] = new TextArea(monthevents[i],5,10);
			daysevents[i].setEditable(false);
			days[i].add(daysevents[i],BorderLayout.CENTER);
			firstweek.add(days[i]);
		}
		JPanel secondweek =new JPanel(new GridLayout(1,7,5,5)); 
		JPanel thirdweek =new JPanel(new GridLayout(1,7,5,5));
		JPanel fourthweek =new JPanel(new GridLayout(1,7,5,5));
		JPanel fifthweek =new JPanel(new GridLayout(1,7,5,5)); 
		for(int i=8; i<15; i++)
		{
			days[i]=new JPanel(new BorderLayout());		
			daysevents[i] = new TextArea(monthevents[i],9,30);
			daysevents[i].setEditable(false);
			days[i].add(daysevents[i],BorderLayout.CENTER);
			secondweek.add(days[i]);
		}
		for(int i=15; i<22; i++)
		{
			days[i]=new JPanel(new BorderLayout());		
			daysevents[i] = new TextArea(monthevents[i],5,10);
			daysevents[i].setEditable(false);
			days[i].add(daysevents[i],BorderLayout.CENTER);
			thirdweek.add(days[i]);
		}
		for(int i=22; i<29; i++)
		{
			days[i]=new JPanel(new BorderLayout());		
			daysevents[i] = new TextArea(monthevents[i],5,10);
			daysevents[i].setEditable(false);
			days[i].add(daysevents[i],BorderLayout.CENTER);
			fourthweek.add(days[i]);
		}
		for(int i=29; i<days.length; i++)
		{
			days[i]=new JPanel(new BorderLayout());		
			daysevents[i] = new TextArea(monthevents[i],5,10);
			daysevents[i].setEditable(false);
			days[i].add(daysevents[i],BorderLayout.CENTER);
			fifthweek.add(days[i]);
		}
		JPanel[] buffer2=new JPanel[8];
		for(int i=0; i<(7-lastdayofweek); i++)
		{
			buffer2[i]=new JPanel();		
			fifthweek.add(buffer2[i]);
		}
		month.add(firstweek);
		month.add(secondweek);
		month.add(thirdweek);
		month.add(fourthweek);
		month.add(fifthweek);
		card2.add(month);
		
	/* DAY VIEW */
	JPanel day = new JPanel(new BorderLayout());
	JLabel today =new JLabel("Today");
	day.add(today,BorderLayout.NORTH);
	TextArea dayevents =new TextArea(todayevents,50,100);
	dayevents.setEditable(false);
	day.add(dayevents,BorderLayout.CENTER);
	card3.add(day);
	
		cards = new JPanel(new CardLayout());
        cards.add(card1, "Week View");
        cards.add(card2, "Month View");
        cards.add(card3, "Day View");
        pane.add(comboBoxPane, BorderLayout.PAGE_START);
        pane.add(cards, BorderLayout.CENTER);
 }
	public void itemStateChanged(ItemEvent evt)
	{
        CardLayout cl = (CardLayout)(cards.getLayout());
        cl.show(cards, (String)evt.getItem());
    }
	public void actionPerformed(ActionEvent e) 
	{
		if("add".equals(e.getActionCommand()))
		{
			addEvents();
			updateEvents();
			frame.repaint();
		}
		if("delete".equals(e.getActionCommand()))
		{
			deleteEvents();
			updateEvents();
			frame.repaint();
		}
		if("edit".equals(e.getActionCommand()))
		{
			deleteEvents();
			updateEvents();
			frame.repaint();
		}
	}
  public void addEvents()
  {
  	//Adds events to the string
  }
  public void updateEvents()
  {
  	//Updates our string of events
  }
  public void deleteEvents()
  {
	  //Deltes events from the string
  }
  public void editEvents()
  {
	  //Edit events in the string
  }
  private static void createAndShowGUI() {
      //Create and set up the window.
      
      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      
      //Create and set up the content pane.
      EmptyFrame test = new EmptyFrame();
      test.addCompToFrame(frame.getContentPane());
      
      //Display the window.
      frame.pack();
      frame.setVisible(true);
  }
  public static void main(String[] args) 
  {
	  try {
          //UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
          UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
      } catch (UnsupportedLookAndFeelException ex) {
          ex.printStackTrace();
      } catch (IllegalAccessException ex) {
          ex.printStackTrace();
      } catch (InstantiationException ex) {
          ex.printStackTrace();
      } catch (ClassNotFoundException ex) {
          ex.printStackTrace();
      }
      /* Turn off metal's use of bold fonts */
      UIManager.put("swing.boldMetal", Boolean.FALSE);
  javax.swing.SwingUtilities.invokeLater(new Runnable() {
      public void run() {
          createAndShowGUI();
      }
  });
  }
public void itemStateChanged1(ItemEvent e) {
	// TODO Auto-generated method stub
	
}
}
