
    package com.example.jason_000.test4;

    import android.app.Activity;
    import android.app.AlertDialog;
    import android.content.Context;
    import android.content.DialogInterface;
    import android.content.Intent;
    import android.os.Bundle;
    import android.view.LayoutInflater;
    import android.view.View;
    import android.widget.AdapterView;
    import android.widget.ArrayAdapter;
    import android.widget.Button;
    import android.widget.EditText;
    import android.widget.LinearLayout;
    import android.widget.ListView;
    import android.widget.TextView;
    import android.widget.CalendarView;
    import android.widget.CalendarView.OnDateChangeListener;
    import android.view.MotionEvent;
    import android.widget.ViewFlipper;
    import java.text.SimpleDateFormat;
    import java.util.Calendar;
    import java.util.Date;
    import java.util.GregorianCalendar;
    import java.util.Locale;


    public class MainActivity extends Activity
    {
        private ViewFlipper viewFlipper;
        private float lastX;
        private Events[] dayevents; //Put Day events here
        private  Events[] event; //Blank array to use for month and week
        private Calendar ci;
        private Calendar ci2;
        private String todaysDate;
        @Override
        public void onCreate(Bundle savedInstanceState)
        {


            ci = new GregorianCalendar();
            ci2 = new GregorianCalendar();
            super.onCreate(savedInstanceState);
            setContentView(R.layout.activity_main);
            //This is the Month View Code
            final CalendarView calendar = (CalendarView) findViewById(R.id.calendar);
            calendar.setOnDateChangeListener(new OnDateChangeListener() {
                @Override
                public void onSelectedDayChange(CalendarView view, int year, int month, int day) {
                    //Find Events at the date givin by the parameters put into event
                    ci2.set(year,month,day);
                    SimpleDateFormat date = new SimpleDateFormat("MMMMMM dd yyyy", Locale.US);
                    Date today = ci2.getTime();
                    todaysDate= date.format(today);
                    popUpEvent(event,todaysDate);
                }


            });

            viewFlipper = (ViewFlipper) findViewById(R.id.viewflipper);

            //ADD
            Button add = (Button) findViewById(R.id.add);
            add.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View arg0) {
                    add();
                }
            });

            //Week View Code
            setWeekView();

            //Day View
            setDayView();
        }
        public void setDayView()
        {
            ListView lv2 = (ListView) findViewById(R.id.dayevents);
            dayevents = setDayEvents();
            String[] dayNames = new String[dayevents.length];
            for (int i = 0; i < dayevents.length; i++)
            {
                dayNames[i] = dayevents[i].getName();
            }
            final ArrayAdapter<String> adapter = new MySimpleArrayAdapter<>(this, android.R.layout.simple_list_item_1, dayNames, dayevents);
            lv2.setAdapter(adapter);
          //  lv2.setEnabled(true);
            lv2.setOnItemClickListener(new AdapterView.OnItemClickListener()
            {
                @Override
                public void onItemClick(AdapterView<?> myAdapter, View myView, int pos, long mylng)
                {
                    deleteOrEdit(dayevents, adapter, pos);
                }
            });
        }
        public void setWeekView()
        {
            Button sun = (Button) findViewById(R.id.Sundayevents);
            Button mon = (Button) findViewById(R.id.Mondayyevents);
            Button tues = (Button) findViewById(R.id.Tuesdayevents);
            Button wed = (Button) findViewById(R.id.Wednesdayevents);
            Button thurs = (Button) findViewById(R.id.Thursdayevents);
            Button fri = (Button) findViewById(R.id.Fridayevents);
            Button sat = (Button) findViewById(R.id.Saturdayevents);
            sun.setOnClickListener(new View.OnClickListener()
            {
                @Override
                public void onClick(View arg0)
                {
                    setWeekEvents(1);
                }
            });
            mon.setOnClickListener(new View.OnClickListener()
            {
                @Override
                public void onClick(View arg0)
                {
                    setWeekEvents (2);
                }
            });
            tues.setOnClickListener(new View.OnClickListener()
            {
                @Override
                public void onClick(View arg0)
                {
                    setWeekEvents(3);
                }
            });
            wed.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View arg0) {
                    setWeekEvents(4);
                }
            });
            thurs.setOnClickListener(new View.OnClickListener()
            {
                @Override
                public void onClick(View arg0)
                {
                    setWeekEvents (5);
                }
            });
            fri.setOnClickListener(new View.OnClickListener()
            {
                @Override
                public void onClick(View arg0)
                {
                    setWeekEvents (6);
                }
            });
            sat.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View arg0) {
                    setWeekEvents (7);}
            });
        }
        public void setWeekEvents (int d)
        {
            ci = new GregorianCalendar();
           int month = ci.get(Calendar.MONTH);
           int year = ci.get(Calendar.YEAR);
           int dow = ci.get(Calendar.DAY_OF_WEEK);
           int day = ci.get(Calendar.DAY_OF_MONTH);
           if(dow<d)//We want a later day
           {
               while(dow<d)
               {
                   dow++;
                   day++;
               }
           }
           else if (dow>d)//We want a earlier then today
           {
               while(dow>d)
               {
                   dow--;
                   day--;
               }
           }
            ci.set(year,(month),day);
            SimpleDateFormat date = new SimpleDateFormat("MMMMMM dd yyyy", Locale.US);
            Date today = ci.getTime();
            todaysDate= date.format(today);
           popUpEvent(event,todaysDate);// Call getDayEvents
       }
        public void deleteOrEdit(Events [] ev,ArrayAdapter<String> ad,int pos)
        {
            final Events [] evs=ev;
            final AlertDialog.Builder alertDialog = new AlertDialog.Builder(MainActivity.this);
            alertDialog.setTitle("Edit or Delete");
            String selectedFromList = (String) ad.getItem(pos);
            int i = 0;
            while (!(selectedFromList.equals(ev[i].getName())))
            {
                i++;
            }
            Context context = MainActivity.this;
            LinearLayout layout = new LinearLayout(context);
            layout.setOrientation(LinearLayout.VERTICAL);

            Button delete = new Button(context);
            delete.setText("Delete");
            layout.addView(delete);
            final int a = i;
            Button edit = new Button(context);
            edit.setText("Edit");
            layout.addView(edit);
            alertDialog.setView(layout);
            edit.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View arg0) {
                    edit(evs[a]);
                }
            });
            delete.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View arg0) {
                    delete(evs[a]);
                }
            });
            alertDialog.show();
        }
        public void add()
        {
            final AlertDialog.Builder alertDialog = new AlertDialog.Builder(MainActivity.this);
            alertDialog.setTitle("Add Event");
            alertDialog.setMessage("Details of the Event");
            Context context = MainActivity.this;
            LinearLayout layout = new LinearLayout(context);
            layout.setOrientation(LinearLayout.VERTICAL);

            final EditText text = new EditText(context);
            text.setHint("Name of Event");
            layout.addView(text);

            final EditText text2 = new EditText(context);
            text2.setHint("Category of Event");
            layout.addView(text2);
            alertDialog.setView(layout);
            alertDialog.setPositiveButton("Ok", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int whichButton) {
                    String name = text.getText().toString();
                    String cat = text2.getText().toString();
                    //Call an event.add method here
                    dialog.cancel();
                }
            });
            alertDialog.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int whichButton) {
                    dialog.cancel();
                }
            });
            alertDialog.show();
        }
        public void edit(Events ev)
        {
            final AlertDialog.Builder alertDialog = new AlertDialog.Builder(MainActivity.this);
            alertDialog.setTitle("Edit Event");
            alertDialog.setMessage("Write what you want to edit");
            Context context = MainActivity.this;
            LinearLayout layout = new LinearLayout(context);
            layout.setOrientation(LinearLayout.VERTICAL);

            final EditText text = new EditText(context);
            text.setHint("Name");
            layout.addView(text);

            final EditText text2 = new EditText(context);
            text2.setHint("Category");
            layout.addView(text2);
            alertDialog.setView(layout);
            alertDialog.setPositiveButton("Ok", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int whichButton) {
                    String name = text.getText().toString();
                    String category = text2.getText().toString();
                    if (!(name.equals("")))
                    {
                        //ev.setName
                    }
                    //Do the same to category
                    //etc.
                    dialog.cancel();
                }
            });
            alertDialog.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int whichButton) {
                    dialog.cancel();
                }
            });
            alertDialog.show();
        }
        public void delete(Events ev)
        {
            final AlertDialog.Builder alertDialog = new AlertDialog.Builder(MainActivity.this);
            alertDialog.setTitle("Delete Event");
            alertDialog.setMessage("Are you sure?");
            alertDialog.setPositiveButton("Ok", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int whichButton) {
                    //Call ev.delete method here
                    dialog.cancel();
                }
            });
            alertDialog.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int whichButton) {
                    dialog.cancel();
                }
            });
            alertDialog.show();
        }
        public void popUpEvent(Events [] ev, String to)
        {
            Events t1= new Events("test",1);
            Events t2= new Events("test2",2);
            Events t3= new Events("test3",3);
            Events t5= new Events("test4",4);
            final Events events[] = {t1, t2, t3, t5}; //Once ev has something in it make events equal to ev; or even replace events with ev in code under here
            String[] names = new String[events.length];
            AlertDialog.Builder alertDialog = new AlertDialog.Builder(MainActivity.this);
            LayoutInflater inflater = getLayoutInflater();
            View convertView = (View) inflater.inflate(R.layout.custom, null);
            alertDialog.setView(convertView);
            alertDialog.setTitle(to+" Events");
            ListView lv = (ListView) convertView.findViewById(R.id.listView1);
            for (int i=0;i<events.length;i++)
            {
                names[i]=events[i].getName();
            }
          final  ArrayAdapter<String> adapter = new MySimpleArrayAdapter<>(this, android.R.layout.simple_list_item_1, names,events);
            lv.setAdapter(adapter);
            lv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                @Override
                public void onItemClick(AdapterView<?> myAdapter, View myView, int pos, long mylng) {
                    deleteOrEdit(events,adapter,pos);
                }
            });
            alertDialog.show();
        }
        public Events[] setDayEvents()
        {
            //Mabye put in param
            int day=ci.get(Calendar.DAY_OF_MONTH);
            int month=ci.get(Calendar.MONTH)+1;
            int year=ci.get(Calendar.YEAR);

            Events t1= new Events("day",1);
            Events t2= new Events("day2",2);
            Events t3= new Events("day3",3);
            Events t5= new Events("day4",4);
            Events[] eve = {t1,t2,t3,t5}; //Use day month and year to find today's events
            return eve;
        }
        //Deals with the sliding DON NOT TOUCH
        public boolean onTouchEvent(MotionEvent touchevent)
        {
            switch (touchevent.getAction())
            {
                case MotionEvent.ACTION_DOWN:
                    lastX = touchevent.getX();
                    break;
                case MotionEvent.ACTION_UP:
                    float currentX = touchevent.getX();
                    // Handling left to right screen swap.
                    if (lastX < currentX)
                    {
                        // If there aren't any other children, just break.
                        if (viewFlipper.getDisplayedChild() == 0)
                            break;
                        // Next screen comes in from left.
                        viewFlipper.setInAnimation(this, R.anim.slide_in_from_left);
                        // Current screen goes out from right.
                        viewFlipper.setOutAnimation(this, R.anim.slide_out_to_right);
                        // Display next screen.
                        viewFlipper.showNext();
                    }
                    // Handling right to left screen swap.
                    if (lastX > currentX)
                    {
                        // If there is a child (to the left), kust break.
                        if (viewFlipper.getDisplayedChild() == 1)
                            break;
                        // Next screen comes in from right.
                        viewFlipper.setInAnimation(this, R.anim.slide_in_from_right);
                        // Current screen goes out from left.
                        viewFlipper.setOutAnimation(this, R.anim.slide_out_to_left);
                        // Display previous screen.
                        viewFlipper.showPrevious();
                    }
                    break;
            }
            return false;
        }

    }
