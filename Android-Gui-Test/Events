package com.example.jason_000.test4;

/**
 * Created by jason_000 on 11/1/2015.
 */
import android.content.Context;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.*;
public class Events
{
    private String name;
    private String category;
    private boolean holi;
    private int startingHour;
    private int startingMinute;
    private int endingMinute;
    private int endingHour;
    private String eventName;
    private String eventDescription;
    private String eventPlace;
    private String date;
    private String endingTimeOfDay;
    private String startingTimeOfDay;
   private File file;
    public Events(String n,String ePlace,String eDescription, String c,int sHour,int sMinute,String sTimeOfDay,String d,int eHour,int eMinute,String eTimeOfDay)
    {
        name=n;
        category=c;
        holi=false;
        startingHour=sHour;
        endingHour=eHour;
        startingMinute=sMinute;
        endingMinute=eMinute;
        eventName=n;
        eventDescription=eDescription;
        eventPlace=ePlace;
        date=d;
        endingTimeOfDay=eTimeOfDay;
        startingTimeOfDay=sTimeOfDay;
    }
    public Events(String n,String c)
    {
        name=n;
        category=c;
    }
    public Events()
    {
        name="";
        category="";
        holi=false;
    }
    public String getName()
    {
        return name;
    }
    public boolean getHoliday()
    {
        return    holi;
    }
    public void setHoliday()
    {
        holi=true;
    }
    public String getCategory()
    {
        return category;
    }

    public void setSHour(int h)
    {
        startingHour = h;
    }
    public int getSHour()
    {
        return startingHour;
    }

    public void setSMinute(int h)
    {
        startingMinute = h;
    }
    public int getSMinute()
    {
        return startingMinute;
    }

    public void setEHour(int h)
    {
        endingHour = h;
    }
    public int getEHour()
    {
        return endingHour;
    }
    public void setEMinute(int h)
    {
        endingMinute = h;
    }
    public int getEMinute()
    {
        return endingMinute;
    }

    public void setEName(String n)
    {
        eventName = n;
    }
    public String getEName()
    {
        return eventName;
    }

    public void setEDescription(String d)
    {
        eventDescription = d;
    }
    public String getEDescription()
    {
        return eventDescription;
    }

    public void setEPlace(String p)
    {
        eventPlace = p;
    }
    public String getEPlace()
    {
        return eventPlace;
    }

    public void setDate(String t)
    {
        date = t;
    }
    public String getDate()
    {
        return date;
    }

    public void setETimeOfDay(String t)
    {
        endingTimeOfDay = t;
    }
    public String getETimeOfDay()
    {
        return endingTimeOfDay;
    }
    public String getSTimeOfDay()
    {
        return startingTimeOfDay;
    }
    public void setSTimeOfDay(String t)
    {
        startingTimeOfDay = t;
    }
    public void setCategory(String t)
    {
        category = t;
    }



    public void addEvent(String n, String c,int sHour,int sMinute,int eHour,int eMinute,String eDescription,String ePlace,String date,String eTimeOfDay,String sTimeOfDay,Context con)
    {
        Events event = new Events();

        event.setEName(n);

        event.setCategory(c);

        event.setEPlace(ePlace);

        event.setEDescription(eDescription);

        event.setSHour(sHour);

        event.setSMinute(sMinute);

        event.setDate(date);

        event.setEHour(eHour);

        event.setEMinute(eMinute);

        event.setETimeOfDay(eTimeOfDay);

        event.setSTimeOfDay(sTimeOfDay);
        String[] write=date.split("/");
        String fileName =  write[0]+"_"+write[1]+"_"+write[2]+"_"+sHour+"_"+sMinute+"_"+sTimeOfDay+".txt";

        try
        {
            FileOutputStream stream = con.openFileOutput(fileName,0);
            try
            {
                stream.write((""+ event.getEName()+"\n").getBytes());//Event name:
                stream.write(("," + event.getEPlace()+"\n").getBytes());//Event location:
                stream.write(("," + event.getEDescription()+"\n").getBytes());//Event description:
                stream.write(("," + event.getSHour() + "," + event.getSMinute() + "," + event.getSTimeOfDay()+"\n").getBytes());//Event start time:
                stream.write(("," + event.getDate()+"\n").getBytes());//Event date:
                stream.write(("," + event.getEHour() + "," + event.getEMinute() + "," + event.getETimeOfDay()+"\n").getBytes());//Event end time:
            } finally
            {
                stream.close();
            }
        }
        catch(IOException ex)
        {
            System.out.println(
                    "Error writing to file '"
                            + fileName + "'");
        }

    }
    public void editEvent(String n, String c,int sHour,int sMinute,int eHour,int eMinute,String eDescription,String ePlace,String date,String eTimeOfDay,String sTimeOfDay,Context con,File f)
    {

        Events event = new Events();

        if(!n.equals(""))
            event.setEName(n);

        if(!c.equals(""))
            event.setCategory(c);

        if(!ePlace.equals(""))
            event.setEPlace(ePlace);


        if(!eDescription.equals(""))
            event.setEDescription(eDescription);

        if(!(sHour==startingHour))
            event.setSHour(sHour);

        if(!(sMinute==startingMinute))
            event.setSMinute(sMinute);

        if(!date.equals(""))
            event.setDate(date);

        if(!(eHour==endingHour))
            event.setEHour(eHour);

        if(!(eMinute==endingMinute))
            event.setEMinute(eMinute);

        if(!eTimeOfDay.equals(""))
            event.setETimeOfDay(eTimeOfDay);

        if(!sTimeOfDay.equals(""))
            event.setETimeOfDay(sTimeOfDay);

        String fileName =  date+ ".txt";

        try
        {
            File path = con.getFilesDir();
            file = new File(path, fileName);
            FileOutputStream stream = new FileOutputStream(file);
            try
            {
                stream.write((""+ event.getEName()+"\n").getBytes());//Event name:
                stream.write(("," + event.getEPlace()+"\n").getBytes());//Event location:
                stream.write(("," + event.getEDescription()+"\n").getBytes());//Event description:
                stream.write(("," + event.getSHour() + "," + event.getSMinute() + "," + event.getSTimeOfDay()+"\n").getBytes());//Event start time:
                stream.write(("," + event.getDate()+"\n").getBytes());//Event date:
                stream.write(("," + event.getEHour() + "," + event.getEMinute() + "," + event.getETimeOfDay()+"\n").getBytes());//Event end time:
            } finally
            {
                stream.close();
            }
        }
        catch(IOException ex)
        {
            System.out.println(
                    "Error writing to file '"
                            + fileName + "'");
        }

    }
    public File getFile()
    {
        return file;
    }

}


